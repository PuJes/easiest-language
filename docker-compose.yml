version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      # 挂载数据目录（如果需要持久化数据）
      - ./easiest-language/data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 开发环境服务
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./easiest-language:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    profiles:
      - dev

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  data:
    driver: local
